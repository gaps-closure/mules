profile PROF1 { 
  device 'CLOSURE'; 
  namespace gma 'urn:gma:1.0';
}

pipeline P1 {
  entry => B1 | x'.//gma:SDHBWPDU';
  B1    => exit;
}

block B1 {
  apply_acl;
  redact_altitude;
}

table gaps_acl {
  | mux | sec | typ | op       |
--|-----+-----+-----+----------|
  | 1   | 1   |  1  | 'deny'   |
  | 1   | 1   |  2  | 'allow'  |
  | 2   | 2   |  1  | 'redact' |  
}

rule redact_altitude {
  let dmux x'.//gma:SDHBWHeader/tagm';
  let dsec x'.//gma:SDHBWHeader/tags';
  let dtyp x'.//gma:SDHBWHeader/tagt';
  if ((dmux == '2') and (dsec == '2') and (dtyp == '1')) then zeroize x'.//gma:Position/x';
}

rule apply_acl {
  let dmux x'.//gma:SDHBWHeader/tagm';
  let dsec x'.//gma:SDHBWHeader/tags';
  let dtyp x'.//gma:SDHBWHeader/tagt';
  if 
    ((dmux == 'gaps_acl.mux') and
     (dsec == 'gaps_acl.sec') and
     (dtyp == 'gaps_acl.typ') and
     (('gaps_acl.typ' == 'allow') or ('gaps_acl.typ' == 'redact')))
  then 
    pass
  else
    (drop);
}

