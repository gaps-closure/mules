{
    //ideally we will be able to use existing cle/json-schema meta schema to refer to sub-schemas
    //thus catch and bugs in this json
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://example.com/gaps-closure-xdcc/xdcc_flow.json",
    
    //map between component and cle-label
    "components":{
        "MPU": "GREEN_MPU",
        "EOIR": "GREEN_EOIR",
        "ISRM": "GREEN_ISRM",
        "MPX": "GREEN_MPX",
        "RDR": "PURPLE_RDR"
    },
    //message flow and related metadata, could be named messages as well, since we are determining the cross
    //domain messages in this section
    "messages":{
        //all source components in a grouping must have the same cle level
        //all destinations must have the cle level
        //do we declare sources/destinations or just source cle_lable?
        //can we determine the source of a message (beyond enclave?)
        "component_heartbeats_GREEN": {
            "name": "component_heartbeats",         //name of message (ActiveMQ message)
            "comment": "optional comment",          //an optional comment that may be added in the gui
            "flows": [ //message flows starting from green domain
                {
                    "source": "MPU",
                    "destination": "EOIR"
                },
                {
                    "source": "MPU",
                    "destination": "ISRM"
                },
                {
                    "source": "MPU",
                    "destination": "MPX"
                },
                {
                    "source": "MPU",
                    "destination": "RDR"
                },
                
                {
                    "source": "ISRM",
                    "destination": "MPU"
                },
                {
                    "source": "ISRM",
                    "destination": "EOIR"
                },
                {
                    "source": "ISRM",
                    "destination": "MPX"
                },
                {
                    "source": "ISRM",
                    "destination": "RDR"
                },
                
                {
                    "source": "MPX",
                    "destination": "MPU"
                },
                {
                    "source": "MPX",
                    "destination": "EOIR"
                },
                {
                    "source": "MPX",
                    "destination": "ISRM"
                },
                {
                    "source": "MPX",
                    "destination": "RDR"
                }
            ]
            "schema": "schema_heartbeats",          //schema, in map below, to be verified
            "cle": "COMPONENT_HEARTBEATS_GREEN"
        },
        "component_heartbeats_PURPLE": {
            "name": "component_heartbeats",
            "comment": "optional comment",
            "flows": [ //message flows starting from purple domain
                {
                    "source": "RDR",
                    "destination": "MPU"
                },
                {
                    "source": "RDR",
                    "destination": "EOIR"
                },
                {
                    "source": "RDR",
                    "destination": "ISRM"
                },
                {
                    "source": "RDR",
                    "destination": "MPX"
                }
            ],
            "schema": "schema_heartbeats",
            "cle": "COMPONENT_HEARTBEATS_PURPLE"
        },
        "updateMissionPlan_GREEN":{  //update mission plan only originates from MPU (GREEN) thus we only need one message listed
            "name": "updateMissionPlan",
            "comment": "optional comment",
            "flows": [ //message flows starting from green domain (
                {
                    "source": "MPU",
                    "destination": "MPX"
                },
                {
                    "source": "MPU",
                    "destination": "ISRM"
                },
                {
                    "source": "MPU",
                    "destination": "EOIR"
                },
                {
                    "source": "MPU",
                    "destination": "RDR"
                }
            ],
            "schema": "schema_missionPlan",
            "cle": "MISSION_PLAN_GREEN"
        }
    },
    //map of schemas based on alias used in "flow"
    //here so we can re-use schemas between flows
    "schemas":{
        "schema_heartbeats":{
            "$schema": "http://json-schema.org/draft-07/schema#"
            //this section matches draft-07 json-schema with a valid schema of the message
            //presumably this should be validated for each message prior to re-sending between
            //domains
        },
        "schema_missionPlan":{
            "$schema": "http://json-schema.org/draft-07/schema#"
        }
    },
    
    //samples full message [optional?] (uses the same map as the schema name)
    "samples":{
        "schema_heartbeats":{
            //a sample message for debugging/developer reference (unit tests?)
            ss="MPU",
            st="ready"
        },
        "schema_missionPlan":{
            //sample mission plan
        }
    },
    //CLE map, from an automation point of view this could be included in flows (since its likely each flow
    //will have a 1 to 1 mapping for a CLE, however for easier reading (and if manually created possible reuse)
    "cles":{
        //note the key here is simular to cle dev <name>
        "COMPONENT_HEARTBEATS_GREEN":{
            "level": "green",
            "cdf": [
                {
                    "remotelevel": "purple",
                    "direction": "egress",
                    "guarddirective":{}
                    //taints will need to be here as well
                }
            ]
        },
        "COMPONENT_HEARTBEATS_PURPLE":{
            "level": "purple",
            "cdf":{
                //cdf for this message
            }
        },
        "MISSION_PLAN_GREEN":{
            "level": "green",
            "cdf":{
                //cdf for this message
            }
        }
    }
}